apply plugin: 'com.android.library'
apply from: "sdk_utils.gradle"

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

//    if (!ArgusAPM_Release) {
//        publishNonDefault true
//    }
    publishNonDefault true

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 27

        // 改参数一般用来调试数据库，数据库生成在sdcard方便调试
        buildConfigField "boolean", "DB_IN_SDCARD", "false"
        // SDK的版本号
        buildConfigField "String", "VERSION", "\"${APMSDK_VERSION}\""
        // 是否是Debug
        buildConfigField "boolean", "IS_DEBUG", "${APMSDK_DEBUG}"
        // SDK的build号
        // 不同版本间，需要更新build号
        buildConfigField "String", "BUILD", "\"${APMSDK_BUILD}\""
    }

    buildTypes {

        debug {
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            consumerProguardFiles 'argus-apm-main.pro'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'argus-apm-main.pro'
        }

        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            consumerProguardFiles 'argus-apm-main.pro'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'argus-apm-main.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    useLibrary 'org.apache.http.legacy'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    compileOnly 'org.aspectj:aspectjrt:1.8.9'
    compileOnly 'org.aspectj:aspectjtools:1.8.9'
    //下面的两行是方便在Debug调试时使用，发布Release包时需要将下面的两行注释掉，并执行copyNewDependentLibs任务
//    if (!ArgusAPM_Release) {
//
//    }
//    releaseImplementation project(path: ':argus-apm-cloud-dummy-impl', configuration: 'release')
//    debugImplementation project(path: ':argus-apm-cloud-dummy-impl', configuration: 'debug')
}

//apply from: "bintray.gradle"